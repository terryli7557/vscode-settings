{
  "Create react function component": {
    "prefix": "rc",
    "body": [
      "import React from 'react'",
      "export function ${1:name}() {",
      "  return (",
      "    <div>",
      "      <div>$0</div>",
      "    </div>",
      "  )",
      "}"
    ]
  },
  "Use state": {
    "prefix": "us",
    "body": [
      "const [${1}, set${1/(.*)/${1:/capitalize}/}] = useState($2)",
      "$0"
    ]
  },
  "Use effect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "  $1", "}, [])", "$0"]
  },
  "Use callback": {
    "prefix": "uc",
    "body": ["useCallback(() => {", "\t$1", "}, [])", "$0"]
  },
  "Use memo": {
    "prefix": "um",
    "body": ["useMemo(() => {", "\t$1", "}, [])", "$0"]
  },
  "Console log": {
    "prefix": ["l"],
    "body": ["console.log($1)$0"],
    "description": "My awesome console log"
  },
  "Try catch": {
    "prefix": "try",
    "body": ["try {", "  $1", "} catch (e) {", "  $2", "}", "$0"],
    "description": "Try catch block"
  },
  "Create a function": {
    "prefix": "fun",
    "body": ["function ${1:functionName}(${2:params}) {", "  $0", "}"],
    "description": "Create a function"
  },
  "Create test": {
    "prefix": "test",
    "body": ["test('$1', () => {", "\t\t", "})"],
    "description": "Create test"
  },
  "Create arrow function": {
    "prefix": "af",
    "body": ["() => {$1}", "$0"],
    "description": "Create arrow function"
  },
  "Create async function": {
    "prefix": "afun",
    "body": ["async function ${1:functionName}(${2:params}) {", "  $0", "}"],
    "description": "Create async function"
  },
  "Set timeout": {
    "prefix": "sto",
    "body": ["setTimeout(() => {", "\t$1", "}, 1000)", "$0"],
    "description": "Set timeout"
  },
  "Set interval": {
    "prefix": "sit",
    "body": ["setInterval(() => {", "\t$1", "}, 1000)", "$0"],
    "description": "Set interval"
  },
  "Eslint disabled next line": {
    "prefix": "eslnl",
    "body": ["// eslint-disable-next-line"],
    "description": "Eslint disable next line"
  },
  "Add style object": {
    "prefix": "st",
    "body": ["style={{ $0 }}"],
    "description": "Add style object"
  },
  "Margin top": {
    "prefix": "mt",
    "body": ["marginTop: $1"],
    "description": "Margin top"
  },
  "Margin bottom": {
    "prefix": "mb",
    "body": ["marginBottom: $1"],
    "description": "Margin bottom"
  },
  "Margin left": {
    "prefix": "ml",
    "body": ["marginLeft: $1"],
    "description": "Margin left"
  },
  "Margin right": {
    "prefix": "mr",
    "body": ["marginRight: $1"],
    "description": "Margin right"
  },
  "Import": {
    "prefix": "imp",
    "body": ["import { $2 } from '$1'", "$0"]
  },
  "Map state": {
    "prefix": "ms",
    "body": [
      "const mapState = ({ sites }: RootState) => ({",
      "\tsiteId: sites.siteId,",
      "})",
      "export const ${1:name} = connect(mapState)(_${1:name})",
      "$0"
    ],
    "description": "Map state"
  },
  "shiftInstance": {
    "prefix": "si",
    "body": ["shiftInstance $0"],
    "description": "shiftInstance"
  },
  "ShiftInstance": {
    "prefix": "Si",
    "body": ["ShiftInstance $0"],
    "description": "ShiftInstance"
  },
  "calculatedShiftInstance": {
    "prefix": "csi",
    "body": ["calculatedShiftInstance $0"],
    "description": "calculatedShiftInstance"
  },
  "CalculatedShiftInstance": {
    "prefix": "Csi",
    "body": ["CalculatedShiftInstance $0"],
    "description": "CaculatedShiftInstance"
  },
  "Use modal": {
    "prefix": "umd",
    "body": [
      "const { closeModal, modalVisible, showModal } = useModal()",
      "$0"
    ],
    "description": "use modal hook"
  }
}
